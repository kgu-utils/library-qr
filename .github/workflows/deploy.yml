name: 도서관 QR 코드 배포

on:
  push:
    branches: [main]
  # 수동으로 워크플로우 실행 가능
  workflow_dispatch:

# GitHub Pages에 대한 권한 설정
permissions:
  contents: read
  pages: write
  id-token: write

# 병렬 실행 방지
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 저장소 체크아웃
        uses: actions/checkout@v4

      - name: Node.js 설정
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: pnpm 설치
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: pnpm store 캐시 가져오기
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: 의존성 캐시 설정
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: 의존성 설치
        run: pnpm install

      - name: next.config.js 생성
        run: |
          echo '/** @type {import("next").NextConfig} */
          const nextConfig = {
            output: "export",
            basePath: process.env.NEXT_PUBLIC_BASE_PATH || "",
            images: { unoptimized: true },
            trailingSlash: true,
          };
          module.exports = nextConfig;' > next.config.js

      - name: 앱 빌드
        run: pnpm build
        env:
          NEXT_PUBLIC_BASE_PATH: /library-qr

      - name: GitHub Pages 업로드
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: GitHub Pages 배포
        id: deployment
        uses: actions/deploy-pages@v4
